module Deeprails
  module Models
    type monitor_update_params =
      {
        description: String,
        monitor_status: Deeprails::Models::MonitorUpdateParams::monitor_status,
        name: String
      }
      & Deeprails::Internal::Type::request_parameters

    class MonitorUpdateParams < Deeprails::Internal::Type::BaseModel
      extend Deeprails::Internal::Type::RequestParameters::Converter
      include Deeprails::Internal::Type::RequestParameters

      attr_reader description: String?

      def description=: (String) -> String

      attr_reader monitor_status: Deeprails::Models::MonitorUpdateParams::monitor_status?

      def monitor_status=: (
        Deeprails::Models::MonitorUpdateParams::monitor_status
      ) -> Deeprails::Models::MonitorUpdateParams::monitor_status

      attr_reader name: String?

      def name=: (String) -> String

      def initialize: (
        ?description: String,
        ?monitor_status: Deeprails::Models::MonitorUpdateParams::monitor_status,
        ?name: String,
        ?request_options: Deeprails::request_opts
      ) -> void

      def to_hash: -> {
        description: String,
        monitor_status: Deeprails::Models::MonitorUpdateParams::monitor_status,
        name: String,
        request_options: Deeprails::RequestOptions
      }

      type monitor_status = :active | :inactive

      module MonitorStatus
        extend Deeprails::Internal::Type::Enum

        ACTIVE: :active
        INACTIVE: :inactive

        def self?.values: -> ::Array[Deeprails::Models::MonitorUpdateParams::monitor_status]
      end
    end
  end
end
