module Deeprails
  module Models
    type defend_create_workflow_params =
      {
        improvement_action: Deeprails::Models::DefendCreateWorkflowParams::improvement_action,
        name: String,
        type: Deeprails::Models::DefendCreateWorkflowParams::type_,
        automatic_hallucination_tolerance_levels: ::Hash[Symbol, Deeprails::Models::DefendCreateWorkflowParams::automatic_hallucination_tolerance_level],
        custom_hallucination_threshold_values: ::Hash[Symbol, Float],
        description: String,
        file_search: ::Array[String],
        max_improvement_attempts: Integer,
        web_search: bool
      }
      & Deeprails::Internal::Type::request_parameters

    class DefendCreateWorkflowParams < Deeprails::Internal::Type::BaseModel
      extend Deeprails::Internal::Type::RequestParameters::Converter
      include Deeprails::Internal::Type::RequestParameters

      attr_accessor improvement_action: Deeprails::Models::DefendCreateWorkflowParams::improvement_action

      attr_accessor name: String

      attr_accessor type: Deeprails::Models::DefendCreateWorkflowParams::type_

      attr_reader automatic_hallucination_tolerance_levels: ::Hash[Symbol, Deeprails::Models::DefendCreateWorkflowParams::automatic_hallucination_tolerance_level]?

      def automatic_hallucination_tolerance_levels=: (
        ::Hash[Symbol, Deeprails::Models::DefendCreateWorkflowParams::automatic_hallucination_tolerance_level]
      ) -> ::Hash[Symbol, Deeprails::Models::DefendCreateWorkflowParams::automatic_hallucination_tolerance_level]

      attr_reader custom_hallucination_threshold_values: ::Hash[Symbol, Float]?

      def custom_hallucination_threshold_values=: (
        ::Hash[Symbol, Float]
      ) -> ::Hash[Symbol, Float]

      attr_reader description: String?

      def description=: (String) -> String

      attr_reader file_search: ::Array[String]?

      def file_search=: (::Array[String]) -> ::Array[String]

      attr_reader max_improvement_attempts: Integer?

      def max_improvement_attempts=: (Integer) -> Integer

      attr_reader web_search: bool?

      def web_search=: (bool) -> bool

      def initialize: (
        improvement_action: Deeprails::Models::DefendCreateWorkflowParams::improvement_action,
        name: String,
        type: Deeprails::Models::DefendCreateWorkflowParams::type_,
        ?automatic_hallucination_tolerance_levels: ::Hash[Symbol, Deeprails::Models::DefendCreateWorkflowParams::automatic_hallucination_tolerance_level],
        ?custom_hallucination_threshold_values: ::Hash[Symbol, Float],
        ?description: String,
        ?file_search: ::Array[String],
        ?max_improvement_attempts: Integer,
        ?web_search: bool,
        ?request_options: Deeprails::request_opts
      ) -> void

      def to_hash: -> {
        improvement_action: Deeprails::Models::DefendCreateWorkflowParams::improvement_action,
        name: String,
        type: Deeprails::Models::DefendCreateWorkflowParams::type_,
        automatic_hallucination_tolerance_levels: ::Hash[Symbol, Deeprails::Models::DefendCreateWorkflowParams::automatic_hallucination_tolerance_level],
        custom_hallucination_threshold_values: ::Hash[Symbol, Float],
        description: String,
        file_search: ::Array[String],
        max_improvement_attempts: Integer,
        web_search: bool,
        request_options: Deeprails::RequestOptions
      }

      type improvement_action = :regen | :fixit | :do_nothing

      module ImprovementAction
        extend Deeprails::Internal::Type::Enum

        REGEN: :regen
        FIXIT: :fixit
        DO_NOTHING: :do_nothing

        def self?.values: -> ::Array[Deeprails::Models::DefendCreateWorkflowParams::improvement_action]
      end

      type type_ = :automatic | :custom

      module Type
        extend Deeprails::Internal::Type::Enum

        AUTOMATIC: :automatic
        CUSTOM: :custom

        def self?.values: -> ::Array[Deeprails::Models::DefendCreateWorkflowParams::type_]
      end

      type automatic_hallucination_tolerance_level = :low | :medium | :high

      module AutomaticHallucinationToleranceLevel
        extend Deeprails::Internal::Type::Enum

        LOW: :low
        MEDIUM: :medium
        HIGH: :high

        def self?.values: -> ::Array[Deeprails::Models::DefendCreateWorkflowParams::automatic_hallucination_tolerance_level]
      end
    end
  end
end
