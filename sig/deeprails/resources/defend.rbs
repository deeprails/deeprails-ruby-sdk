module Deeprails
  module Resources
    class Defend
      def create_workflow: (
        improvement_action: Deeprails::Models::DefendCreateWorkflowParams::improvement_action,
        name: String,
        type: Deeprails::Models::DefendCreateWorkflowParams::type_,
        ?automatic_hallucination_tolerance_levels: ::Hash[Symbol, Deeprails::Models::DefendCreateWorkflowParams::automatic_hallucination_tolerance_level],
        ?custom_hallucination_threshold_values: ::Hash[Symbol, Float],
        ?description: String,
        ?max_improvement_attempts: Integer,
        ?request_options: Deeprails::request_opts
      ) -> Deeprails::DefendResponse

      def retrieve_event: (
        String event_id,
        workflow_id: String,
        ?request_options: Deeprails::request_opts
      ) -> Deeprails::WorkflowEventResponse

      def retrieve_workflow: (
        String workflow_id,
        ?request_options: Deeprails::request_opts
      ) -> Deeprails::DefendResponse

      def submit_event: (
        String workflow_id,
        model_input: Deeprails::DefendSubmitEventParams::ModelInput,
        model_output: String,
        model_used: String,
        run_mode: Deeprails::Models::DefendSubmitEventParams::run_mode,
        ?nametag: String,
        ?request_options: Deeprails::request_opts
      ) -> Deeprails::WorkflowEventResponse

      def update_workflow: (
        String workflow_id,
        ?description: String,
        ?name: String,
        ?request_options: Deeprails::request_opts
      ) -> Deeprails::DefendResponse

      def initialize: (client: Deeprails::Client) -> void
    end
  end
end
